#!./Selene
-- Timed Collection example

Selene.Use("SelTimedCollection")
Selene.Use("SelMultitasking")	-- for detached tasks test
Selene.LetsGo()	-- ensure late building dependencies

-- Create a collection for 5 records
col = SelTimedCollection.Create("simple timed", 5)

for i=1,4 do
	col:Push(i, os.time()+i)
end
col:dump()

print "\n\nAdditional values that eject first ones"
print "---------------------------------------\n"

for i=5,7 do
	col:Push(i)
end
col:dump()

print "\n\nReplace with randoms"
print "--------------------\n"

for i=1,5 do
	col:Push( math.random(0,1000), os.time() + math.random(0,1000000) - 500000 )
end
col:dump()

--[[
print( "MinMax", col:MinMax() )

print("\n\niData()")
print("--------\n")

for d,t in col:iData() do print(d, os.date("%x",t) ) end

col:Save('/tmp/tst.dt')

print "\n\nReload data"
print "-----------\n"

col2 = SelTimedCollection.Create(5)
col2:Load('/tmp/tst.dt')
col2:dump()

print("\n\nClearing the collection")
print("-----------------------\n")

col:Clear()
col:dump()

print("\n\nInitial load")
print("------------\n")

for i=1,2 do
	col:Push(i, os.time()+i)
end
col:dump()

print("\n\nEject the 1st value")
print("-------------------\n")

for i=5,8 do
	col:Push( math.random(0,1000), os.time() + math.random(0,1000000) - 500000 )
end
col:dump()
]]
