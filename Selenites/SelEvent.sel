# ./Selene 
-- Input device's event example

Selene.Use("SelEvent")
Selene.LetsGo()	-- ensure late building dependencies

local evt

	-- Call back to handle incoming event
function rcv_event()
	local t, tp, c, v = evt:read()
	SelLog.Log('I', 'event received : ' .. tostring(math.floor(t)) ..', '.. tostring(math.floor(tp)) ..'->'.. tostring(SelEvent.TypeName(tp)) ..', '.. tostring(c) ..'->'.. tostring(SelEvent.KeyName(c)) ..', val:'.. tostring(v))
end

	-- to identity which event to use, have a look in 'by-path' links
	-- As example, on my MSI :
	--[[
ls -l /dev/input/by-path/
total 0
lrwxrwxrwx 1 root root 10 22 mars  21:06 pci-0000:00:14.0-usb-0:1:1.0-event-kbd -> ../event10
]]

evt = SelEvent.create('/dev/input/event10', rcv_event)

print '\nWaiting for data'
print '-----------------'

while true do
	local rt = table.pack( Selene.WaitFor(evt) )

	for _,ret in ipairs(rt) do	-- An imediate function to execute ?
		if type(ret) == 'function' then
			ret()
		elseif SelError.isSelError(ret) then -- Technical error ?
			print("Error ".. ret:getLevel() ..":", ret:getMessage())
		else	-- Unknown/unsupported action (dependency missing ?)
			print("Don't know what to do with", type(ret))
		end
	end
end
