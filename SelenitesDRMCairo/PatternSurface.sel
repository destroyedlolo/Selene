#!./Selene 
--- Draw a surface wide Linear pattern

Selene.UseDRMCairo()

	-- Open default card.
	-- As no argument is passed it's the default one
	-- /dev/dri/card0
card,err,msg = SelDCCard.Open()
if not card then
	print("*E*", err,msg)
	os.exit()
end

local srf = card:GetPrimarySurface()
local w,h = srf:GetSize()	-- Retrieve its size
srf:Clear( 0,0,0 )	-- 100% green and no transparency

----------------------------

local pat = SelDCPattern.createLinear(0,0, 0,h) -- color pattern

	-- Set fixed color (top, middle, bottom in this example)
pat:addFixPoint( 0, 1.0, 0, 0 )
pat:addFixPoint( 0.5, 1.0, 1.0, 0 )
pat:addFixPoint( 1.0, 0, 1.0, 0 )

srf:SetSourcePattern(pat)
srf:FillRectangle(0,0, w,h)

pat:Release()

	-- gradient pattern

pat = SelDCPattern.createLinear(0,0, w,0)
pat:addFixPoint( 0, .2, .2, .2, 1 )
pat:addFixPoint( 1, .2, .2, .2, .2 )

local spat = SelDCSurface.create(w,h)

spat:SetSourcePattern(pat)
spat:FillRectangle(0,0, w,h)

pat:Release()

	-- Mix both surface

srf:SetSourceSurface(spat)
srf:Paint()

spat:Release()
----------------------------

--[[
fch,err,msg = srf:Dump("/tmp","SPattern")
if not fch then	-- An error happened
	print("Can't dump", err,msg);
else
	print("Dumped to", fch);
end
--]]

print "Hit 'enter' key to exit"
io.stdin:read'*l'	-- wait for enter
	---
	-- cleanup
	---

srf:Release()
card:Release()

